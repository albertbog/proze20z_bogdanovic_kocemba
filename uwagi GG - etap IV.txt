uwaga ogólna odnośnie repozytorium (chyba wcześniej zapomniałem):
Do repozytorium nie wrzuca się plików .zip z kolejnymi wersjami projektu.
W repozytorium przechowuje się pliki źródłowe! To repozytorium trzyma dla nas kolejne wersje 
(zatwierdzane poleceniem 'commit') - do każdej z nich można powrócić, nie trzeba tego robić samemu.
Przecież to jest system kontroli wersji!!!! Nauczyć się go stosować - i wiele pracy nam odpada :-)

Zgodnie z założeniem, celem IV etapu(...) jest implementacja - BŁĄD!!!!!!!!
Celem jest ZAPROJEKTOWANIE!!!! Wielokrotnie było mówione i pisane (w tym na stronie przedmiotu, w mejlu, itd.)
że "implementacja (...) nie jest wymagana"!!!!! 
JAK MAM TO NAPISAĆ, ŻEBY DOTARŁO???????????????

1 Klient wysyła prośbę do serwera o treści „Load_avatars!n” - 

domyślam się - bo chyba nie zostało to jawnie podane (choć mogło mi umnkąć w powodzi zupełnie niepotrzebnego tekstu), 
że jako tekst, a dokładniej linię tekstu, czyli na końcu będzie jeszcze znak '\n' - bo przecież trzeba jakoś 
komunikat zakończyć, skąd inaczej serwer będzie wiedział, że to już koniec komunikatu/żądania?

2. gdzie n to numer awataru

ale "numer" jako liczba całkowita (int) czy rzeczywista (float)? Dlaczego mam się tego domyślać????

3. a następnie przesyła odpowiedni awatar z dostępnej mu listy awatarów

JAK??? Od razu zaznaczam - komunikacja klient-serwer ma dotyczyć uzyskania danych konfiguracyjnych, 
nie musi to obejmować elementów graficznych gry (wyglądu gracza, skrzynek, pola gry) - z serwera dowiadujemy się
jaki jest układ planszy (to co w wersji lokalnej odczytywane jest z pliku konfiguracyjnego), nie to jak 
poszczególne elementy mają wyglądać (zakładamy, że gra pliki graficzne ma u siebie - one nie podlegają konfigurowaniu).

4. generuje odpowiednią linię znaków (wszystkie rzędy mapy są oddzielone znakiem „/”) symbolizującą mapę

no i jak ta linia znaków ma wyglądać?????

5. Serwer dostając żądanie przetwarza je, odpowiednio koduje dane (jak wyżej) oraz odsyła je klientowi. 

"jak wyżej" - czyli jak???? Tu ma być podana dokładna postac przesłanego komuniaktu!!!!

Po raz kolejny:
- obejrzeć, jak wygląda przykładowy protokół dostępny w materiałach wykładowych (wykład o sieci),
- przeczytać uważnie mejla z przypomnieniem/uwagami o etapie IV - jest tam też bardzo trywialny przykład komunikatu i jego opisu,
i poprawić swój protokół!!! (tak, żebym w najpóźniej  poniedziałek mógł obrejrzeć nową wersję, 
jeśli będzie gotowa wcześniej - to prosze o informację)
Generalnie opis komunikatów wysyłanych z gry do serwera jest ok (brakuje jedynie informacji o typach wysyłanych danych,
np. numer poziomu w komunikacie cytowanym powyżej czy Punkty w komunikacie Save_ranking). 
Wydaje się również, że zakres tych komunikatów jest ok (tzn. można uzyskać potrzebne informacje), a nawet za obszerny
(nie są potrzebne komunikaty do uzyskiwania danych graficznych, np. awatarów czy tekstur).
Natomiast trzeba "pokazać" jak wyglądają komunikaty-odpowiedzi z serwera!

Etap do poprawy!!! (-5 wstawione w USOSie dla zwrócenia uwagi!)